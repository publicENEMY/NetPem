<sdk:Page 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:navigation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Navigation"
	xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit" 
	xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk" xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="StreamingExperience.Views.Results" 
	mc:Ignorable="d" d:DesignWidth="640" d:DesignHeight="2000"
	Title="Results Page">
	<sdk:Page.Resources>
		<Style x:Key="LayoutTransformerStyle" TargetType="toolkit:LayoutTransformer">
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkit:LayoutTransformer">
						<Grid x:Name="TransformRoot" Background="{TemplateBinding Background}">
							<ContentPresenter x:Name="Presenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="AccordionButtonStyle" TargetType="toolkit:AccordionButton">
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Background" Value="White"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="IsTabStop" Value="True"/>
			<Setter Property="TabNavigation" Value="Once"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkit:AccordionButton">
						<Grid Background="Transparent" Margin="{TemplateBinding Padding}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="ExpandDirectionStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="ExpandDown">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="icon">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="icon">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="header">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="header">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd1">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" To="-90" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="arrow"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ExpandUp">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="icon">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="icon">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="header">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="header">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd1">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" To="90" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="arrow"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ExpandLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="icon">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="icon">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="header">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="header">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd1">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="header">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<TransformGroup>
															<RotateTransform Angle="90"/>
														</TransformGroup>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="arrow"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ExpandRight">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="icon">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="icon">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="header">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="header">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd1">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="header">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<TransformGroup>
															<RotateTransform Angle="-90"/>
														</TransformGroup>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" To="180" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="arrow"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ExpansionStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Collapsed">
										<Storyboard>
											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="icon"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Expanded">
										<Storyboard>
											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" To="90" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="icon"/>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpandedBackground">
												<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="00:00:00"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Checked"/>
									<VisualState x:Name="Unchecked"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
										<VisualTransition From="MouseOver" GeneratedDuration="00:00:00.1" To="Normal"/>
										<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
										<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimation BeginTime="0" To="#222" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="arrow"/>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBackground">
												<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.3"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimation BeginTime="0" To="#FF003366" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="arrow"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard/>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualElement">
												<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.385"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="background" Background="{TemplateBinding Background}" CornerRadius="1,1,1,1">
								<Grid>
									<Border x:Name="ExpandedBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1" Height="Auto" Margin="0,0,0,0" Opacity="0" VerticalAlignment="Stretch"/>
									<Border x:Name="MouseOverBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1" Height="Auto" Margin="0,0,0,0" Opacity="0" VerticalAlignment="Stretch"/>
									<Grid VerticalAlignment="Center">
										<Grid.ColumnDefinitions>
											<ColumnDefinition x:Name="cd0" Width="Auto"/>
											<ColumnDefinition x:Name="cd1" Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition x:Name="rd0" Height="Auto"/>
											<RowDefinition x:Name="rd1" Height="Auto"/>
										</Grid.RowDefinitions>
										<Grid x:Name="icon" Grid.Column="0" HorizontalAlignment="Center" Height="19" Grid.Row="0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Width="19">
											<Grid.RenderTransform>
												<TransformGroup>
													<ScaleTransform/>
													<SkewTransform/>
													<RotateTransform Angle="-90"/>
													<TranslateTransform/>
												</TransformGroup>
											</Grid.RenderTransform>
											<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" Height="Auto" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center" Width="Auto">
												<Path.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform/>
														<TranslateTransform/>
													</TransformGroup>
												</Path.RenderTransform>
											</Path>
										</Grid>
										<toolkit:LayoutTransformer x:Name="header" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,0" Grid.Row="0" Grid.RowSpan="1" VerticalAlignment="Center" FontSize="12" Style="{StaticResource LayoutTransformerStyle}"/>
									</Grid>
								</Grid>
							</Border>
							<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" RadiusY="1" RadiusX="1" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="AccordionItemStyle" TargetType="toolkit:AccordionItem">
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="#FFECECEC"/>
			<Setter Property="Background" Value="White"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkit:AccordionItem">
						<Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ExpanderButton">
												<EasingColorKeyFrame KeyTime="0" Value="#FFF16422"/>
												<EasingColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="ExpanderButton">
												<EasingColorKeyFrame KeyTime="0" Value="#FFD8D8D8"/>
												<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFFF6326"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="ExpanderButton">
												<EasingColorKeyFrame KeyTime="0" Value="#FFEEEEEE"/>
												<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFFFC131"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ExpansionStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Collapsed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(ExpandableContentControl.Percentage)" Storyboard.TargetName="ExpandSite">
												<SplineDoubleKeyFrame KeySpline="0.2,0,0,1" KeyTime="00:00:00.3" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="00:00:00.3" Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandSite">
												<DiscreteObjectKeyFrame KeyTime="00:00:00">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Collapsed</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Expanded">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(ExpandableContentControl.Percentage)" Storyboard.TargetName="ExpandSite">
												<SplineDoubleKeyFrame KeySpline="0.2,0,0,1" KeyTime="00:00:00.3" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="LockedStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Locked">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="ExpanderButton">
												<DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unlocked">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="ExpanderButton">
												<DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ExpandDirectionStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="ExpandDown">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd1">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ExpandUp">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="ExpanderButton">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="ExpandSite">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ExpandLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="ExpanderButton">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="ExpandSite">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="ExpanderButton">
												<DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="ExpandSite">
												<DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="ExpanderButton">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="ExpandSite">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ExpandRight">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="ExpanderButton">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="ExpandSite">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="ExpanderButton">
												<DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="ExpandSite">
												<DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="ExpandSite">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="ExpandSite">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd1">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
								<Border.BorderBrush>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFCCCCCC" Offset="0"/>
										<GradientStop Color="White" Offset="1"/>
									</LinearGradientBrush>
								</Border.BorderBrush>
								<Grid Background="#FFF6F6F6">
									<Grid.ColumnDefinitions>
										<ColumnDefinition x:Name="cd0" Width="Auto"/>
										<ColumnDefinition x:Name="cd1" Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition x:Name="rd0" Height="Auto"/>
										<RowDefinition x:Name="rd1" Height="Auto"/>
									</Grid.RowDefinitions>
									<toolkit:AccordionButton x:Name="ExpanderButton" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="True" IsChecked="{TemplateBinding IsSelected}" Margin="0,0,0,0" Padding="0,0,0,0" Grid.Row="0" Style="{StaticResource AccordionButtonStyle}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="38" Foreground="#FFF16422">
										<toolkit:AccordionButton.Background>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFEEEEEE" Offset="0"/>
												<GradientStop Color="#FFD8D8D8" Offset="1"/>
											</LinearGradientBrush>
										</toolkit:AccordionButton.Background>
									</toolkit:AccordionButton>
									<toolkit:ExpandableContentControl x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="0,0,0,0" Percentage="0" RevealMode="{TemplateBinding ExpandDirection}" Grid.Row="1" Style="{TemplateBinding ExpandableContentControlStyle}" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Grid>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</sdk:Page.Resources>
	<sdk:Page.Style>
		<StaticResource ResourceKey="PageStyle"/>
	</sdk:Page.Style>
	<Grid x:Name="LayoutRoot">
		<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">

			<StackPanel x:Name="ContentStackPanel" Margin="0,42,0,0">
				<Border CornerRadius="2" BorderThickness="1" HorizontalAlignment="Center" Margin="4">
					<Border.BorderBrush>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFA4A4A4" Offset="0"/>
							<GradientStop Color="White" Offset="1"/>
						</LinearGradientBrush>
					</Border.BorderBrush>
					<Grid Width="294">
						<Grid VerticalAlignment="Top">
							<Grid.Background>
								<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
									<GradientStop Color="#FFFFC131"/>
									<GradientStop Color="#FFF15A22" Offset="1"/>
								</LinearGradientBrush>
							</Grid.Background>
							<TextBlock TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" Margin="8" Text="Your streaming experience is" FontSize="16" TextAlignment="Center"/>
						</Grid>
						<StackPanel Margin="0,40,0,0">
							<StackPanel.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="White" Offset="0"/>
									<GradientStop Color="#FFCDCDCD" Offset="1"/>
								</LinearGradientBrush>
							</StackPanel.Background>
							<TextBlock Style="{StaticResource HeaderTextStyle}" x:Name="tbResult" TextWrapping="Wrap" Text="result" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,42" FontSize="32"/>
							<TextBlock x:Name="LastTestResolution" TextWrapping="Wrap" Text="" Padding="8,0" FontSize="13.333"/>
							<TextBlock x:Name="RecommendedResolution" TextWrapping="Wrap" Text="" Padding="8,0" FontSize="13.333"/>
							<TextBlock x:Name="GoodSummary" TextWrapping="Wrap" Text="You will get GOOD streaming experience if the rebuffering and dropped frames count does not exceed the threshold." Padding="8,0,8,8" FontSize="13.333" Visibility="Collapsed"/>
							<TextBlock x:Name="PoorSummary" TextWrapping="Wrap" Text="You will get POOR streaming experience if the rebuffering and dropped frames count exceed the threshold." Padding="8,0,8,8" FontSize="13.333"/>
						</StackPanel>
					</Grid>
				</Border>
				<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
					<Border x:Name="Card" CornerRadius="2" BorderThickness="1" HorizontalAlignment="Center" Margin="4,24">
						<Border.BorderBrush>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FFA4A4A4" Offset="0"/>
								<GradientStop Color="White" Offset="1"/>
							</LinearGradientBrush>
						</Border.BorderBrush>
						<Grid Width="240">
							<Grid VerticalAlignment="Top">
								<ToolTipService.ToolTip>
									<ToolTip Content="Rebuffering will occurs when there is insufficient amount media data in memory required for playback." ></ToolTip>
								</ToolTipService.ToolTip>
								<Grid.Background>
									<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
										<GradientStop Color="#FFFFC131"/>
										<GradientStop Color="#FFF15A22" Offset="1"/>
									</LinearGradientBrush>
								</Grid.Background>
								<TextBlock TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" Margin="8" Text="Rebuffering" TextAlignment="Center" FontSize="16"/>
							</Grid>
							<StackPanel Margin="0,40,0,0">
								<StackPanel.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="#FFCDCDCD" Offset="1"/>
									</LinearGradientBrush>
								</StackPanel.Background>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,42">
									<TextBlock Style="{StaticResource HeaderTextStyle}" x:Name="rebuffFrequency" TextWrapping="Wrap" Text="result" FontWeight="Bold" FontSize="21.333" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
									<TextBlock TextWrapping="Wrap" Text="times rebuffering" HorizontalAlignment="Center" VerticalAlignment="Center" Width="61" Margin="4"/>
								</StackPanel>
								<Grid HorizontalAlignment="Center" Margin="8">
									<StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Left" VerticalAlignment="Center">
										<TextBlock TextWrapping="Wrap" Text="Threshold :" FontSize="13.333"/>
										<TextBlock FontSize="13.333" x:Name="rebuffPar" TextWrapping="Wrap" Text="'no'"/>
										<TextBlock FontSize="13.333" TextWrapping="Wrap" Text=" times"/>
									</StackPanel>
									<StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
										<TextBlock FontSize="13.333" TextWrapping="Wrap" Text="Summary : "/>
										<TextBlock FontSize="13.333" x:Name="rebuffConclusion" TextWrapping="Wrap" Text="'Exceed threshold.'"/>
									</StackPanel>
								</Grid>
							</StackPanel>
						</Grid>
					</Border>
					<Border x:Name="Card_Copy" CornerRadius="2" BorderThickness="1" HorizontalAlignment="Center" Margin="4,24">
						<Border.BorderBrush>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FFA4A4A4" Offset="0"/>
								<GradientStop Color="White" Offset="1"/>
							</LinearGradientBrush>
						</Border.BorderBrush>
						<Grid Width="240">
							<Grid VerticalAlignment="Top">
								<ToolTipService.ToolTip>
									<ToolTip Content="Dropped frames is the number of frames that have to be dropped due to insufficient amount of computational resources." ></ToolTip>
								</ToolTipService.ToolTip>
								<Grid.Background>
									<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
										<GradientStop Color="#FFFFC131"/>
										<GradientStop Color="#FFF15A22" Offset="1"/>
									</LinearGradientBrush>
								</Grid.Background>
								<TextBlock TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" Margin="8" Text="Dropped frames" TextAlignment="Center" FontSize="16"/>
							</Grid>
							<StackPanel Margin="0,40,0,0">
								<StackPanel.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="White" Offset="0"/>
										<GradientStop Color="#FFCDCDCD" Offset="1"/>
									</LinearGradientBrush>
								</StackPanel.Background>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,42">
									<TextBlock Style="{StaticResource HeaderTextStyle}" x:Name="droppedFramesFrequency" TextWrapping="Wrap" Text="result" FontWeight="Bold" FontSize="21.333" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
									<TextBlock TextWrapping="Wrap" Text="dropped frames" HorizontalAlignment="Center" VerticalAlignment="Center" Width="47" Margin="4"/>
								</StackPanel>
								<Grid HorizontalAlignment="Center" Margin="8">
									<StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Left" VerticalAlignment="Center">
										<TextBlock FontSize="13.333" TextWrapping="Wrap" Text="Threshold :"/>
										<TextBlock FontSize="13.333" x:Name="dropFramesPar" TextWrapping="Wrap" Text="'no'"/>
										<TextBlock FontSize="13.333" TextWrapping="Wrap" Text=" dropped frame/s"/>
									</StackPanel>
									<StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
										<TextBlock FontSize="13.333" TextWrapping="Wrap" Text="Summary : "/>
										<TextBlock FontSize="13.333" x:Name="droppedFramesConclusion" TextWrapping="Wrap" Text="'Below threshold.'"/>
									</StackPanel>
								</Grid>
							</StackPanel>
						</Grid>
					</Border>
				</StackPanel>
				<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed">
					<StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,4">
						<TextBlock TextWrapping="Wrap" Text="Your rebuffering" VerticalAlignment="Center" Width="200"/>
						<TextBox x:Name="rTotalRebuffering" TextWrapping="Wrap" Text="{Binding Position, ElementName=SilverlightPlayer}" Height="23" Width="130" IsReadOnly="True"/>
					</StackPanel>
					<StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,4">
						<TextBlock TextWrapping="Wrap" Text="Par rebuffering" VerticalAlignment="Center" Width="200"/>
						<TextBox x:Name="rParRebuffering" TextWrapping="Wrap" Text="{Binding Position, ElementName=SilverlightPlayer}" Height="23" Width="130" IsReadOnly="True"/>
					</StackPanel>
					<StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,4">
						<TextBlock TextWrapping="Wrap" Text="Your dropped frames" VerticalAlignment="Center" Width="200"/>
						<TextBox x:Name="rTotalDroppedFrames" TextWrapping="Wrap" Text="{Binding Position, ElementName=SilverlightPlayer}" Height="23" Width="130" IsReadOnly="True"/>
					</StackPanel>
					<StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,4">
						<TextBlock TextWrapping="Wrap" Text="Par dropped frames" VerticalAlignment="Center" Width="200"/>
						<TextBox x:Name="rParDroppedFrames" TextWrapping="Wrap" Text="{Binding Position, ElementName=SilverlightPlayer}" Height="23" Width="130" IsReadOnly="True"/>
					</StackPanel>
					<StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,4">
						<TextBlock TextWrapping="Wrap" Text="Rebuffering performance" VerticalAlignment="Center" Width="200"/>
						<TextBox x:Name="rRebuffering" TextWrapping="Wrap" Text="{Binding Position, ElementName=SilverlightPlayer}" Height="23" Width="130" IsReadOnly="True"/>
					</StackPanel>
					<StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,4">
						<TextBlock TextWrapping="Wrap" Text="Dropped frames performance" VerticalAlignment="Center" Width="200"/>
						<TextBox x:Name="rDroppedFrames" TextWrapping="Wrap" Text="{Binding Position, ElementName=SilverlightPlayer}" Height="23" Width="130" IsReadOnly="True"/>
					</StackPanel>
				</StackPanel>
				<toolkit:Accordion x:Name="resultSolution" HorizontalAlignment="Center" Width="500" SelectionSequence="CollapseBeforeExpand" SelectionMode="ZeroOrMore">
					<toolkit:AccordionItem x:Name="solutionRebuffering" Header="Your streaming session rebuffering too many times." Style="{StaticResource AccordionItemStyle}" IsSelected="False">
						<RichTextBox VerticalScrollBarVisibility="Auto" Height="50" Padding="8" IsReadOnly="True" BorderThickness="0" Background="{x:Null}" >
							<Paragraph>
								<Run Text="Most probably your network is congested. Try closing other application that uses network in your pc and other connected pc that shared the same network as yours."/>
								<!--<Run Text="Most probably your internet connection is highly utilized during the test. Close all internet application running on your pc and isolate any other pc that shares the same internet connection."/>-->
							</Paragraph>
						</RichTextBox>
					</toolkit:AccordionItem>
					<toolkit:AccordionItem x:Name="solutionDroppedFrames" Header="You have too many dropped frames." Style="{StaticResource AccordionItemStyle}" IsSelected="False">
						<RichTextBox VerticalScrollBarVisibility="Auto" Height="90" Padding="8" IsReadOnly="True" BorderThickness="0" Background="{x:Null}" >
							<Paragraph>
								<Run Text="You did not have enough computational resources for streaming video with selected resolution. Try closing other application on your pc. Make sure you have the latest driver for your display device. If thats doesn't help, try upgrading your GPU. If possible, try upgrading your cpu, and/or ram."/>
							</Paragraph>
						</RichTextBox>
					</toolkit:AccordionItem>
				</toolkit:Accordion>
				<Grid Height="8"/>
				<Border x:Name="benchmarkTableContent" CornerRadius="2" BorderThickness="1" Width="500">
					<Border.BorderBrush>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFA4A4A4" Offset="0"/>
							<GradientStop Color="White" Offset="1"/>
						</LinearGradientBrush>
					</Border.BorderBrush>
					<StackPanel Height="200">
						<Grid Height="32" VerticalAlignment="Top">
							<Grid.Background>
								<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
									<GradientStop Color="#FFFFC131"/>
									<GradientStop Color="#FFF15A22" Offset="1"/>
								</LinearGradientBrush>
							</Grid.Background>
							<TextBlock x:Name="benchmarkTableTitle" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" Margin="8" Text="Benchmark table for 'subscription rate' subscription" HorizontalAlignment="Center"/>
						</Grid>
						<Grid ShowGridLines="True" Height="168">
							<Grid.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="White" Offset="0"/>
									<GradientStop Color="#FFCDCDCD" Offset="1"/>
								</LinearGradientBrush>
							</Grid.Background>
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition/>
								<ColumnDefinition/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<TextBlock TextWrapping="Wrap" Text="Resolution" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"/>
							<TextBlock TextWrapping="Wrap" Text="360p" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock TextWrapping="Wrap" Text="1080p" Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock TextWrapping="Wrap" Text="720p" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock TextWrapping="Wrap" Text="480p" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock TextWrapping="Wrap" Text="Dropped frames par" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"/>
							<TextBlock TextWrapping="Wrap" Text="Rebuffering par" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"/>
							<TextBlock TextWrapping="Wrap" Text="Average bitrate" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"/>
							<TextBlock x:Name="bitrate360p" TextWrapping="Wrap" Text="512kbps" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="bitrate480p" TextWrapping="Wrap" Text="1Mbps" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="bitrate720p" TextWrapping="Wrap" Text="2Mbps" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="bitrate1080p" TextWrapping="Wrap" Text="4Mbps" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="rebuffering360p" TextWrapping="Wrap" Text="rebuffering360p" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="rebuffering480p" TextWrapping="Wrap" Text="rebuffering480p" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="rebuffering720p" TextWrapping="Wrap" Text="rebuffering720p" Grid.Row="3" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="rebuffering1080p" TextWrapping="Wrap" Text="rebuffering1080p" Grid.Row="4" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="dropped360p" TextWrapping="Wrap" Text="dropped360p" Grid.Row="1" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="dropped480p" TextWrapping="Wrap" Text="dropped480p" Grid.Row="2" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="dropped720p" TextWrapping="Wrap" Text="dropped720p" Grid.Row="3" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock x:Name="dropped1080p" TextWrapping="Wrap" Text="dropped1080p" Grid.Row="4" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Grid>
					</StackPanel>
				</Border>
				<Grid Height="8"/>
				<Border CornerRadius="2" BorderThickness="1" HorizontalAlignment="Center" Margin="4" Width="500">
					<Border.BorderBrush>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFA4A4A4" Offset="0"/>
							<GradientStop Color="White" Offset="1"/>
						</LinearGradientBrush>
					</Border.BorderBrush>
					<StackPanel Orientation="Vertical">
						<Grid VerticalAlignment="Top">
							<Grid.Background>
								<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
									<GradientStop Color="#FFFFC131"/>
									<GradientStop Color="#FFF15A22" Offset="1"/>
								</LinearGradientBrush>
							</Grid.Background>
							<TextBlock TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" Margin="8" Text="Restart test" FontSize="16" TextAlignment="Center"/>
						</Grid>
						<Grid>
							<Grid.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="White" Offset="0"/>
									<GradientStop Color="#FFCDCDCD" Offset="1"/>
								</LinearGradientBrush>
							</Grid.Background>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="40">
								<ComboBox x:Name="resolutionSelection" SelectedIndex="0" Width="250" FontSize="13.333" VerticalAlignment="Center">
									<ComboBoxItem Content="Select resolution..."/>
									<ComboBoxItem Content="360p, Streamyx 512kbps"/>
									<ComboBoxItem Content="480p, Streamyx 1Mbps"/>
									<ComboBoxItem Content="720p, Streamyx 2Mbps"/>
									<ComboBoxItem Content="1080p, Streamyx 4Mbps/Unifi"/>
								</ComboBox>
								<Button x:Name="restartMeasurement" Content="Start" Width="75" Click="restartMeasurement_Click" FontSize="13.333" VerticalAlignment="Center"/>
							</StackPanel>
						</Grid>
					</StackPanel>
				</Border>
				<StackPanel x:Name="debugStack">
					<StackPanel Orientation="Horizontal">
						<TextBlock TextWrapping="Wrap" Text="Current rebuffering threshold : "/>
						<TextBlock x:Name="tbCurrentRebufferingThreshold" TextWrapping="Wrap" Text="tbCurrentRebufferingThreshold"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock TextWrapping="Wrap" Text="Current dropped threshold : "/>
						<TextBlock x:Name="tbCurrentDroppedThreshold" TextWrapping="Wrap" Text="tbCurrentDroppedThreshold"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock TextWrapping="Wrap" Text="Total rebuffering : "/>
						<TextBlock x:Name="tbRebufferingCount" TextWrapping="Wrap" Text="tbRebufferingCount"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock TextWrapping="Wrap" Text="Total dropped frames : "/>
						<TextBlock x:Name="tbDroppedFrameCount" TextWrapping="Wrap" Text="tbDroppedFrameCount"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock TextWrapping="Wrap" Text="Total playback de-sync : "/>
						<TextBlock x:Name="tbDesyncCount" TextWrapping="Wrap" Text="tbDesyncCount"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock TextWrapping="Wrap" Text="Result rebuffering: "/>
						<TextBlock x:Name="tbResultRebuffering" TextWrapping="Wrap" Text="resultRebuffering"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock TextWrapping="Wrap" Text="Result dropped frames: "/>
						<TextBlock x:Name="tbResultDroppedFrames" TextWrapping="Wrap" Text="resultDroppedFrames"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock TextWrapping="Wrap" Text="Result de-sync: "/>
						<TextBlock x:Name="tbResultDesync" TextWrapping="Wrap" Text="resultDesync"/>
					</StackPanel>
				</StackPanel>
			</StackPanel>

		</ScrollViewer>
	</Grid>
</sdk:Page>
